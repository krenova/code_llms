Codes are mainly built off the work of: https://github.com/DannyArends/LLMstream
and other sources from the net.

Below is the set of setup instructions from  https://github.com/DannyArends/LLMstream
with some minor changes that is required to keep up to date with the developments.


# Get Python 3.11.4 with pip
https://www.python.org/downloads/

# Get the visual studio compiler: Check: Python development workload + the Native development tools option
https://visualstudio.microsoft.com/free-developer-offers/

# Get CUDA 12.2 update 1
https://developer.nvidia.com/cuda-downloads

# DOwnload the LAMA2 model (llama-2-7b-chat.ggmlv3.q4_0.bin) from:
https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGML/tree/main

# Install pytorch with cuda support
pip install numpy
pip install langchain
pip install sentence_transformers

# Optional for audio related work
# pip install simpleaudio

# Upgrade setup tools
pip install --upgrade setuptools

# Install torch with CUDA support
pip install --force-reinstall --no-cache-dir torch --index-url https://download.pytorch.org/whl/cu118


# install llama-cpp-python
set CMAKE_ARGS="-DLLAMA_CUBLAS=on" && set FORCE_CMAKE=1 && pip install --verbose --force-reinstall --no-cache-dir llama-cpp-python==0.2.5
# Powershell equivalent command:
$env:CMAKE_ARGS="-DLLAMA_CUBLAS=on"; $env:FORCE_CMAKE=1; pip install --verbose --force-reinstall --no-cache-dir llama-cpp-python==0.2.5




# Sometimes error occurs when installing llama-cpp-python: No Cuda toolset found. 
# In this case, copy the following 4 files from
# FROM: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.2\extras\visual_studio_integration\MSBuildExtensions
# TO: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\BuildCustomizations



